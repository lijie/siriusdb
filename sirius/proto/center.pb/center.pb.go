// Code generated by protoc-gen-go.
// source: center.proto
// DO NOT EDIT!

/*
Package PbCenter is a generated protocol buffer package.

It is generated from these files:
	center.proto

It has these top-level messages:
	RegReq
	RegRsp
	GetServerReq
	GetServerRsp
	PingReq
	PingRsp
	NotifyReq
	NotifyRsp
	GetAreaListReq
	GetAreaListRsp
	RegNotifyReq
	RegNotifyRsp
*/
package PbCenter

import proto "code.google.com/p/goprotobuf/proto"
import math "math"
import PbCommon "seasun.com/sirius/proto/common.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Command int32

const (
	// common.command.CENTER_CMD_BEGIN = 10
	Command_CMD_REG_REQ           Command = 11
	Command_CMD_REG_RSP           Command = 12
	Command_CMD_PING_REQ          Command = 13
	Command_CMD_PING_RSP          Command = 14
	Command_CMD_GET_SERVER_REQ    Command = 15
	Command_CMD_GET_SERVER_RSP    Command = 16
	Command_CMD_NOTIFY_REQ        Command = 17
	Command_CMD_NOTIFY_RSP        Command = 18
	Command_CMD_GET_AREA_LIST_REQ Command = 19
	Command_CMD_GET_AREA_LIST_RSP Command = 20
	Command_CMD_REG_NOTIFY_REQ    Command = 21
	Command_CMD_REG_NOTIFY_RSP    Command = 22
)

var Command_name = map[int32]string{
	11: "CMD_REG_REQ",
	12: "CMD_REG_RSP",
	13: "CMD_PING_REQ",
	14: "CMD_PING_RSP",
	15: "CMD_GET_SERVER_REQ",
	16: "CMD_GET_SERVER_RSP",
	17: "CMD_NOTIFY_REQ",
	18: "CMD_NOTIFY_RSP",
	19: "CMD_GET_AREA_LIST_REQ",
	20: "CMD_GET_AREA_LIST_RSP",
	21: "CMD_REG_NOTIFY_REQ",
	22: "CMD_REG_NOTIFY_RSP",
}
var Command_value = map[string]int32{
	"CMD_REG_REQ":           11,
	"CMD_REG_RSP":           12,
	"CMD_PING_REQ":          13,
	"CMD_PING_RSP":          14,
	"CMD_GET_SERVER_REQ":    15,
	"CMD_GET_SERVER_RSP":    16,
	"CMD_NOTIFY_REQ":        17,
	"CMD_NOTIFY_RSP":        18,
	"CMD_GET_AREA_LIST_REQ": 19,
	"CMD_GET_AREA_LIST_RSP": 20,
	"CMD_REG_NOTIFY_REQ":    21,
	"CMD_REG_NOTIFY_RSP":    22,
}

func (x Command) Enum() *Command {
	p := new(Command)
	*p = x
	return p
}
func (x Command) String() string {
	return proto.EnumName(Command_name, int32(x))
}
func (x *Command) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Command_value, data, "Command")
	if err != nil {
		return err
	}
	*x = Command(value)
	return nil
}

type Errcode int32

const (
	Errcode_ERR_INTER         Errcode = 10010
	Errcode_ERR_INVALID_PARAM Errcode = 10011
	Errcode_ERR_REG_TOO_MUCH  Errcode = 10012
	Errcode_ERR_EXIST         Errcode = 10013
	Errcode_ERR_NOEXIST       Errcode = 10014
)

var Errcode_name = map[int32]string{
	10010: "ERR_INTER",
	10011: "ERR_INVALID_PARAM",
	10012: "ERR_REG_TOO_MUCH",
	10013: "ERR_EXIST",
	10014: "ERR_NOEXIST",
}
var Errcode_value = map[string]int32{
	"ERR_INTER":         10010,
	"ERR_INVALID_PARAM": 10011,
	"ERR_REG_TOO_MUCH":  10012,
	"ERR_EXIST":         10013,
	"ERR_NOEXIST":       10014,
}

func (x Errcode) Enum() *Errcode {
	p := new(Errcode)
	*p = x
	return p
}
func (x Errcode) String() string {
	return proto.EnumName(Errcode_name, int32(x))
}
func (x *Errcode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Errcode_value, data, "Errcode")
	if err != nil {
		return err
	}
	*x = Errcode(value)
	return nil
}

// when aid == -1, sid == -1, means all(reg means all area,all server)
type RegReq struct {
	Type             *int32         `protobuf:"zigzag32,1,req,name=type" json:"type,omitempty"`
	Addr             *PbCommon.Addr `protobuf:"bytes,2,req,name=addr" json:"addr,omitempty"`
	Resv             *int32         `protobuf:"zigzag32,3,opt,name=resv,def=0" json:"resv,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RegReq) Reset()         { *m = RegReq{} }
func (m *RegReq) String() string { return proto.CompactTextString(m) }
func (*RegReq) ProtoMessage()    {}

const Default_RegReq_Resv int32 = 0

func (m *RegReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *RegReq) GetAddr() *PbCommon.Addr {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *RegReq) GetResv() int32 {
	if m != nil && m.Resv != nil {
		return *m.Resv
	}
	return Default_RegReq_Resv
}

type RegRsp struct {
	Gid              *int64 `protobuf:"zigzag64,1,req,name=gid" json:"gid,omitempty"`
	Resv             *int32 `protobuf:"zigzag32,2,opt,name=resv" json:"resv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegRsp) Reset()         { *m = RegRsp{} }
func (m *RegRsp) String() string { return proto.CompactTextString(m) }
func (*RegRsp) ProtoMessage()    {}

func (m *RegRsp) GetGid() int64 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *RegRsp) GetResv() int32 {
	if m != nil && m.Resv != nil {
		return *m.Resv
	}
	return 0
}

type GetServerReq struct {
	Aid              *int32 `protobuf:"zigzag32,1,req,name=aid" json:"aid,omitempty"`
	Sid              *int32 `protobuf:"zigzag32,2,req,name=sid" json:"sid,omitempty"`
	Type             *int32 `protobuf:"zigzag32,3,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetServerReq) Reset()         { *m = GetServerReq{} }
func (m *GetServerReq) String() string { return proto.CompactTextString(m) }
func (*GetServerReq) ProtoMessage()    {}

func (m *GetServerReq) GetAid() int32 {
	if m != nil && m.Aid != nil {
		return *m.Aid
	}
	return 0
}

func (m *GetServerReq) GetSid() int32 {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return 0
}

func (m *GetServerReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type GetServerRsp struct {
	Addrs            []*PbCommon.AddrLoad `protobuf:"bytes,1,rep,name=addrs" json:"addrs,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GetServerRsp) Reset()         { *m = GetServerRsp{} }
func (m *GetServerRsp) String() string { return proto.CompactTextString(m) }
func (*GetServerRsp) ProtoMessage()    {}

func (m *GetServerRsp) GetAddrs() []*PbCommon.AddrLoad {
	if m != nil {
		return m.Addrs
	}
	return nil
}

type PingReq struct {
	Reqnum           *int32 `protobuf:"zigzag32,1,req,name=reqnum" json:"reqnum,omitempty"`
	Delay            *int32 `protobuf:"zigzag32,2,req,name=delay" json:"delay,omitempty"`
	Linknum          *int32 `protobuf:"zigzag32,3,req,name=linknum" json:"linknum,omitempty"`
	Thres            *int32 `protobuf:"zigzag32,4,req,name=thres" json:"thres,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingReq) Reset()         { *m = PingReq{} }
func (m *PingReq) String() string { return proto.CompactTextString(m) }
func (*PingReq) ProtoMessage()    {}

func (m *PingReq) GetReqnum() int32 {
	if m != nil && m.Reqnum != nil {
		return *m.Reqnum
	}
	return 0
}

func (m *PingReq) GetDelay() int32 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return 0
}

func (m *PingReq) GetLinknum() int32 {
	if m != nil && m.Linknum != nil {
		return *m.Linknum
	}
	return 0
}

func (m *PingReq) GetThres() int32 {
	if m != nil && m.Thres != nil {
		return *m.Thres
	}
	return 0
}

type PingRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingRsp) Reset()         { *m = PingRsp{} }
func (m *PingRsp) String() string { return proto.CompactTextString(m) }
func (*PingRsp) ProtoMessage()    {}

type NotifyReq struct {
	Type             *int32 `protobuf:"zigzag32,1,req,name=type" json:"type,omitempty"`
	Aid              *int32 `protobuf:"zigzag32,2,req,name=aid" json:"aid,omitempty"`
	Sid              *int32 `protobuf:"zigzag32,3,req,name=sid" json:"sid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NotifyReq) Reset()         { *m = NotifyReq{} }
func (m *NotifyReq) String() string { return proto.CompactTextString(m) }
func (*NotifyReq) ProtoMessage()    {}

func (m *NotifyReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NotifyReq) GetAid() int32 {
	if m != nil && m.Aid != nil {
		return *m.Aid
	}
	return 0
}

func (m *NotifyReq) GetSid() int32 {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return 0
}

type NotifyRsp struct {
	Resv             *int32 `protobuf:"zigzag32,1,opt,name=resv" json:"resv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NotifyRsp) Reset()         { *m = NotifyRsp{} }
func (m *NotifyRsp) String() string { return proto.CompactTextString(m) }
func (*NotifyRsp) ProtoMessage()    {}

func (m *NotifyRsp) GetResv() int32 {
	if m != nil && m.Resv != nil {
		return *m.Resv
	}
	return 0
}

// get all area and it's name
type GetAreaListReq struct {
	Resv             *int32 `protobuf:"zigzag32,1,opt,name=resv" json:"resv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAreaListReq) Reset()         { *m = GetAreaListReq{} }
func (m *GetAreaListReq) String() string { return proto.CompactTextString(m) }
func (*GetAreaListReq) ProtoMessage()    {}

func (m *GetAreaListReq) GetResv() int32 {
	if m != nil && m.Resv != nil {
		return *m.Resv
	}
	return 0
}

type GetAreaListRsp struct {
	List             []*PbCommon.AreaSrvInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	Resv             *int32                  `protobuf:"zigzag32,2,opt,name=resv" json:"resv,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetAreaListRsp) Reset()         { *m = GetAreaListRsp{} }
func (m *GetAreaListRsp) String() string { return proto.CompactTextString(m) }
func (*GetAreaListRsp) ProtoMessage()    {}

func (m *GetAreaListRsp) GetList() []*PbCommon.AreaSrvInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GetAreaListRsp) GetResv() int32 {
	if m != nil && m.Resv != nil {
		return *m.Resv
	}
	return 0
}

type RegNotifyReq struct {
	Type             *int32 `protobuf:"zigzag32,1,req,name=type" json:"type,omitempty"`
	Resv             *int32 `protobuf:"zigzag32,2,opt,name=resv" json:"resv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegNotifyReq) Reset()         { *m = RegNotifyReq{} }
func (m *RegNotifyReq) String() string { return proto.CompactTextString(m) }
func (*RegNotifyReq) ProtoMessage()    {}

func (m *RegNotifyReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *RegNotifyReq) GetResv() int32 {
	if m != nil && m.Resv != nil {
		return *m.Resv
	}
	return 0
}

type RegNotifyRsp struct {
	Resv             *int32 `protobuf:"zigzag32,1,opt,name=resv" json:"resv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegNotifyRsp) Reset()         { *m = RegNotifyRsp{} }
func (m *RegNotifyRsp) String() string { return proto.CompactTextString(m) }
func (*RegNotifyRsp) ProtoMessage()    {}

func (m *RegNotifyRsp) GetResv() int32 {
	if m != nil && m.Resv != nil {
		return *m.Resv
	}
	return 0
}

func init() {
	proto.RegisterEnum("PbCenter.Command", Command_name, Command_value)
	proto.RegisterEnum("PbCenter.Errcode", Errcode_name, Errcode_value)
}
