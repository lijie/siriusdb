// Code generated by protoc-gen-go.
// source: dbproxy.proto
// DO NOT EDIT!

/*
Package dbproto is a generated protocol buffer package.

It is generated from these files:
	dbproxy.proto

It has these top-level messages:
	Get
	GetResult
	Set
	SetResult
	Del
	RawSQL
	RawSQLResult
	RawRedis
	RawRedisResult
	UseDB
	FlushItem
*/
package dbproto

import proto "code.google.com/p/goprotobuf/proto"
import math "math"
import google_protobuf "seasun.com/sirius/proto/google/protobuf/descriptor.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Command int32

const (
	Command_CMD_SET_REQ      Command = 107
	Command_CMD_SET_RSP      Command = 108
	Command_CMD_GET_REQ      Command = 109
	Command_CMD_GET_RSP      Command = 110
	Command_CMD_DEL_REQ      Command = 111
	Command_CMD_DEL_RSP      Command = 112
	Command_CMD_RAWSQL_REQ   Command = 113
	Command_CMD_RAWSQL_RSP   Command = 114
	Command_CMD_RAWREDIS_REQ Command = 115
	Command_CMD_RAWREDIS_RSP Command = 116
	Command_CMD_SELECTDB_REQ Command = 117
	Command_CMD_SELECTDB_RSP Command = 118
	// only do insert
	Command_CMD_SETNX_REQ Command = 119
	Command_CMD_SETNX_RSP Command = 120
	// select db for current connection
	Command_CMD_USEDB_REQ Command = 121
	Command_CMD_USEDB_RSP Command = 122
)

var Command_name = map[int32]string{
	107: "CMD_SET_REQ",
	108: "CMD_SET_RSP",
	109: "CMD_GET_REQ",
	110: "CMD_GET_RSP",
	111: "CMD_DEL_REQ",
	112: "CMD_DEL_RSP",
	113: "CMD_RAWSQL_REQ",
	114: "CMD_RAWSQL_RSP",
	115: "CMD_RAWREDIS_REQ",
	116: "CMD_RAWREDIS_RSP",
	117: "CMD_SELECTDB_REQ",
	118: "CMD_SELECTDB_RSP",
	119: "CMD_SETNX_REQ",
	120: "CMD_SETNX_RSP",
	121: "CMD_USEDB_REQ",
	122: "CMD_USEDB_RSP",
}
var Command_value = map[string]int32{
	"CMD_SET_REQ":      107,
	"CMD_SET_RSP":      108,
	"CMD_GET_REQ":      109,
	"CMD_GET_RSP":      110,
	"CMD_DEL_REQ":      111,
	"CMD_DEL_RSP":      112,
	"CMD_RAWSQL_REQ":   113,
	"CMD_RAWSQL_RSP":   114,
	"CMD_RAWREDIS_REQ": 115,
	"CMD_RAWREDIS_RSP": 116,
	"CMD_SELECTDB_REQ": 117,
	"CMD_SELECTDB_RSP": 118,
	"CMD_SETNX_REQ":    119,
	"CMD_SETNX_RSP":    120,
	"CMD_USEDB_REQ":    121,
	"CMD_USEDB_RSP":    122,
}

func (x Command) Enum() *Command {
	p := new(Command)
	*p = x
	return p
}
func (x Command) String() string {
	return proto.EnumName(Command_name, int32(x))
}
func (x *Command) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Command_value, data, "Command")
	if err != nil {
		return err
	}
	*x = Command(value)
	return nil
}

type Errcode int32

const (
	Errcode_ERR_RWCACHE     Errcode = 10101
	Errcode_ERR_RWDB        Errcode = 10102
	Errcode_ERR_UNPACK      Errcode = 10103
	Errcode_ERR_SAMEACCOUNT Errcode = 10104
	Errcode_ERR_CORRUPTION  Errcode = 10105
	Errcode_ERR_NODATA      Errcode = 10106
	Errcode_ERR_GSERR       Errcode = 10107
	Errcode_ERR_TIMEOUT     Errcode = 10108
	Errcode_ERR_DICONNECT   Errcode = 10109
	Errcode_ERR_UNKNOWNDB   Errcode = 10110
	Errcode_ERR_EMPTYDB     Errcode = 10111
	Errcode_ERR_UNKNOWMSG   Errcode = 10112
)

var Errcode_name = map[int32]string{
	10101: "ERR_RWCACHE",
	10102: "ERR_RWDB",
	10103: "ERR_UNPACK",
	10104: "ERR_SAMEACCOUNT",
	10105: "ERR_CORRUPTION",
	10106: "ERR_NODATA",
	10107: "ERR_GSERR",
	10108: "ERR_TIMEOUT",
	10109: "ERR_DICONNECT",
	10110: "ERR_UNKNOWNDB",
	10111: "ERR_EMPTYDB",
	10112: "ERR_UNKNOWMSG",
}
var Errcode_value = map[string]int32{
	"ERR_RWCACHE":     10101,
	"ERR_RWDB":        10102,
	"ERR_UNPACK":      10103,
	"ERR_SAMEACCOUNT": 10104,
	"ERR_CORRUPTION":  10105,
	"ERR_NODATA":      10106,
	"ERR_GSERR":       10107,
	"ERR_TIMEOUT":     10108,
	"ERR_DICONNECT":   10109,
	"ERR_UNKNOWNDB":   10110,
	"ERR_EMPTYDB":     10111,
	"ERR_UNKNOWMSG":   10112,
}

func (x Errcode) Enum() *Errcode {
	p := new(Errcode)
	*p = x
	return p
}
func (x Errcode) String() string {
	return proto.EnumName(Errcode_name, int32(x))
}
func (x *Errcode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Errcode_value, data, "Errcode")
	if err != nil {
		return err
	}
	*x = Errcode(value)
	return nil
}

type Flags int32

const (
	Flags_FLAG_DB_ONLY    Flags = 1
	Flags_FLAG_CACHE_ONLY Flags = 2
	Flags_FLAG_SET_ONLY   Flags = 4
	Flags_FLAG_MULTI_GET  Flags = 8
	Flags_FLAG_LAST_ID    Flags = 16
)

var Flags_name = map[int32]string{
	1:  "FLAG_DB_ONLY",
	2:  "FLAG_CACHE_ONLY",
	4:  "FLAG_SET_ONLY",
	8:  "FLAG_MULTI_GET",
	16: "FLAG_LAST_ID",
}
var Flags_value = map[string]int32{
	"FLAG_DB_ONLY":    1,
	"FLAG_CACHE_ONLY": 2,
	"FLAG_SET_ONLY":   4,
	"FLAG_MULTI_GET":  8,
	"FLAG_LAST_ID":    16,
}

func (x Flags) Enum() *Flags {
	p := new(Flags)
	*p = x
	return p
}
func (x Flags) String() string {
	return proto.EnumName(Flags_name, int32(x))
}
func (x *Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Flags_value, data, "Flags")
	if err != nil {
		return err
	}
	*x = Flags(value)
	return nil
}

// Commands
type Get struct {
	MsgType          *string `protobuf:"bytes,1,req,name=msg_type" json:"msg_type,omitempty"`
	Key              *string `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Flags            *uint32 `protobuf:"varint,3,opt,name=flags,def=0" json:"flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Get) Reset()         { *m = Get{} }
func (m *Get) String() string { return proto.CompactTextString(m) }
func (*Get) ProtoMessage()    {}

const Default_Get_Flags uint32 = 0

func (m *Get) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *Get) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Get) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return Default_Get_Flags
}

type GetResult struct {
	Data             [][]byte `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GetResult) Reset()         { *m = GetResult{} }
func (m *GetResult) String() string { return proto.CompactTextString(m) }
func (*GetResult) ProtoMessage()    {}

func (m *GetResult) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Set struct {
	MsgType          *string `protobuf:"bytes,1,req,name=msg_type" json:"msg_type,omitempty"`
	Key              *string `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Value            []byte  `protobuf:"bytes,3,req,name=value" json:"value,omitempty"`
	Flags            *uint32 `protobuf:"varint,4,opt,name=flags,def=0" json:"flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Set) Reset()         { *m = Set{} }
func (m *Set) String() string { return proto.CompactTextString(m) }
func (*Set) ProtoMessage()    {}

const Default_Set_Flags uint32 = 0

func (m *Set) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *Set) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Set) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Set) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return Default_Set_Flags
}

type SetResult struct {
	LastInsertId     *uint64 `protobuf:"varint,1,opt,name=last_insert_id,def=0" json:"last_insert_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetResult) Reset()         { *m = SetResult{} }
func (m *SetResult) String() string { return proto.CompactTextString(m) }
func (*SetResult) ProtoMessage()    {}

const Default_SetResult_LastInsertId uint64 = 0

func (m *SetResult) GetLastInsertId() uint64 {
	if m != nil && m.LastInsertId != nil {
		return *m.LastInsertId
	}
	return Default_SetResult_LastInsertId
}

type Del struct {
	MsgType          *string `protobuf:"bytes,1,req,name=msg_type" json:"msg_type,omitempty"`
	Key              *string `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Flags            *uint32 `protobuf:"varint,3,opt,name=flags,def=0" json:"flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Del) Reset()         { *m = Del{} }
func (m *Del) String() string { return proto.CompactTextString(m) }
func (*Del) ProtoMessage()    {}

const Default_Del_Flags uint32 = 0

func (m *Del) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *Del) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Del) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return Default_Del_Flags
}

type RawSQL struct {
	MsgType          *string `protobuf:"bytes,1,req,name=msg_type" json:"msg_type,omitempty"`
	Sql              []byte  `protobuf:"bytes,2,req,name=sql" json:"sql,omitempty"`
	Flags            *uint32 `protobuf:"varint,3,opt,name=flags,def=0" json:"flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RawSQL) Reset()         { *m = RawSQL{} }
func (m *RawSQL) String() string { return proto.CompactTextString(m) }
func (*RawSQL) ProtoMessage()    {}

const Default_RawSQL_Flags uint32 = 0

func (m *RawSQL) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *RawSQL) GetSql() []byte {
	if m != nil {
		return m.Sql
	}
	return nil
}

func (m *RawSQL) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return Default_RawSQL_Flags
}

type RawSQLResult struct {
	Values           [][]byte `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RawSQLResult) Reset()         { *m = RawSQLResult{} }
func (m *RawSQLResult) String() string { return proto.CompactTextString(m) }
func (*RawSQLResult) ProtoMessage()    {}

func (m *RawSQLResult) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

type RawRedis struct {
	MsgType          *string `protobuf:"bytes,1,req,name=msg_type" json:"msg_type,omitempty"`
	Command          []byte  `protobuf:"bytes,2,req,name=command" json:"command,omitempty"`
	Flags            *uint32 `protobuf:"varint,3,opt,name=flags,def=0" json:"flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RawRedis) Reset()         { *m = RawRedis{} }
func (m *RawRedis) String() string { return proto.CompactTextString(m) }
func (*RawRedis) ProtoMessage()    {}

const Default_RawRedis_Flags uint32 = 0

func (m *RawRedis) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *RawRedis) GetCommand() []byte {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *RawRedis) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return Default_RawRedis_Flags
}

type RawRedisResult struct {
	Values           [][]byte `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *RawRedisResult) Reset()         { *m = RawRedisResult{} }
func (m *RawRedisResult) String() string { return proto.CompactTextString(m) }
func (*RawRedisResult) ProtoMessage()    {}

func (m *RawRedisResult) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

type UseDB struct {
	Dbname           *string `protobuf:"bytes,1,req,name=dbname" json:"dbname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UseDB) Reset()         { *m = UseDB{} }
func (m *UseDB) String() string { return proto.CompactTextString(m) }
func (*UseDB) ProtoMessage()    {}

func (m *UseDB) GetDbname() string {
	if m != nil && m.Dbname != nil {
		return *m.Dbname
	}
	return ""
}

// Internal use
type FlushItem struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	MsgType          *string `protobuf:"bytes,2,req,name=msg_type" json:"msg_type,omitempty"`
	Time             *uint64 `protobuf:"varint,3,req,name=time" json:"time,omitempty"`
	Cmd              *uint32 `protobuf:"varint,4,req,name=cmd" json:"cmd,omitempty"`
	Dbname           *string `protobuf:"bytes,5,req,name=dbname" json:"dbname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FlushItem) Reset()         { *m = FlushItem{} }
func (m *FlushItem) String() string { return proto.CompactTextString(m) }
func (*FlushItem) ProtoMessage()    {}

func (m *FlushItem) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *FlushItem) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *FlushItem) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *FlushItem) GetCmd() uint32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *FlushItem) GetDbname() string {
	if m != nil && m.Dbname != nil {
		return *m.Dbname
	}
	return ""
}

var E_Index = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         52234,
	Name:          "dbproto.index",
	Tag:           "varint,52234,opt,name=index",
}

var E_IndexUnique = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         52235,
	Name:          "dbproto.index_unique",
	Tag:           "varint,52235,opt,name=index_unique",
}

var E_MysqlCreateOption = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         52236,
	Name:          "dbproto.mysql_create_option",
	Tag:           "bytes,52236,opt,name=mysql_create_option",
}

var E_Orm = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         51236,
	Name:          "dbproto.orm",
	Tag:           "varint,51236,opt,name=orm",
}

var E_Indexfield = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         51237,
	Name:          "dbproto.indexfield",
	Tag:           "bytes,51237,opt,name=indexfield",
}

var E_MysqlCreateTableOption = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         51238,
	Name:          "dbproto.mysql_create_table_option",
	Tag:           "bytes,51238,opt,name=mysql_create_table_option",
}

func init() {
	proto.RegisterEnum("dbproto.Command", Command_name, Command_value)
	proto.RegisterEnum("dbproto.Errcode", Errcode_name, Errcode_value)
	proto.RegisterEnum("dbproto.Flags", Flags_name, Flags_value)
	proto.RegisterExtension(E_Index)
	proto.RegisterExtension(E_IndexUnique)
	proto.RegisterExtension(E_MysqlCreateOption)
	proto.RegisterExtension(E_Orm)
	proto.RegisterExtension(E_Indexfield)
	proto.RegisterExtension(E_MysqlCreateTableOption)
}
