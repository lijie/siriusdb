// Code generated by protoc-gen-go.
// source: gs.proto
// DO NOT EDIT!

/*
Package gsproto is a generated protocol buffer package.

It is generated from these files:
	gs.proto

It has these top-level messages:
	RelayReq
	LoginReq
	LoginRsp
	LogoutReq
	LogoutRsp
	KickoutReq
	KickoutRsp
*/
package gsproto

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Command int32

const (
	// GAME_CMD_BEGIN = 501;
	Command_CMD_LOGIN_REQ   Command = 501
	Command_CMD_LOGIN_RSP   Command = 502
	Command_CMD_LOGOUT_REQ  Command = 503
	Command_CMD_LOGOUT_RSP  Command = 504
	Command_CMD_RELAY_REQ   Command = 505
	Command_CMD_RELAY_RSP   Command = 506
	Command_CMD_KICKOUT_REQ Command = 507
	Command_CMD_KICKOUT_RSP Command = 508
	Command_NTF_PLAYERDATA  Command = 600
	Command_NTF_NOTICE      Command = 601
	Command_NTF_KICKOUT     Command = 602
)

var Command_name = map[int32]string{
	501: "CMD_LOGIN_REQ",
	502: "CMD_LOGIN_RSP",
	503: "CMD_LOGOUT_REQ",
	504: "CMD_LOGOUT_RSP",
	505: "CMD_RELAY_REQ",
	506: "CMD_RELAY_RSP",
	507: "CMD_KICKOUT_REQ",
	508: "CMD_KICKOUT_RSP",
	600: "NTF_PLAYERDATA",
	601: "NTF_NOTICE",
	602: "NTF_KICKOUT",
}
var Command_value = map[string]int32{
	"CMD_LOGIN_REQ":   501,
	"CMD_LOGIN_RSP":   502,
	"CMD_LOGOUT_REQ":  503,
	"CMD_LOGOUT_RSP":  504,
	"CMD_RELAY_REQ":   505,
	"CMD_RELAY_RSP":   506,
	"CMD_KICKOUT_REQ": 507,
	"CMD_KICKOUT_RSP": 508,
	"NTF_PLAYERDATA":  600,
	"NTF_NOTICE":      601,
	"NTF_KICKOUT":     602,
}

func (x Command) Enum() *Command {
	p := new(Command)
	*p = x
	return p
}
func (x Command) String() string {
	return proto.EnumName(Command_name, int32(x))
}
func (x *Command) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Command_value, data, "Command")
	if err != nil {
		return err
	}
	*x = Command(value)
	return nil
}

type Errcode int32

const (
	// ERR_BEGIN = 10501;
	// 解析protobuf失败
	Errcode_ERR_UNPACK Errcode = 10501
	// 后端服务超时
	Errcode_ERR_TIMEOUT Errcode = 10502
	// 重复登录
	Errcode_ERR_ALREADYLOGIN Errcode = 10503
	// GS未完成初始化
	Errcode_ERR_GSNOTINIT Errcode = 10504
	// 不存在的玩家
	Errcode_ERR_PLAYERNOTEXIST Errcode = 10505
	// 玩家数据被锁定, 用来防止同一个用户数据的并发修改
	Errcode_ERR_PLAYERLOCK    Errcode = 10506
	Errcode_ERR_SERVERDISCONN Errcode = 10507
	Errcode_ERR_PACK          Errcode = 10508
	Errcode_ERR_NETSEND       Errcode = 10509
)

var Errcode_name = map[int32]string{
	10501: "ERR_UNPACK",
	10502: "ERR_TIMEOUT",
	10503: "ERR_ALREADYLOGIN",
	10504: "ERR_GSNOTINIT",
	10505: "ERR_PLAYERNOTEXIST",
	10506: "ERR_PLAYERLOCK",
	10507: "ERR_SERVERDISCONN",
	10508: "ERR_PACK",
	10509: "ERR_NETSEND",
}
var Errcode_value = map[string]int32{
	"ERR_UNPACK":         10501,
	"ERR_TIMEOUT":        10502,
	"ERR_ALREADYLOGIN":   10503,
	"ERR_GSNOTINIT":      10504,
	"ERR_PLAYERNOTEXIST": 10505,
	"ERR_PLAYERLOCK":     10506,
	"ERR_SERVERDISCONN":  10507,
	"ERR_PACK":           10508,
	"ERR_NETSEND":        10509,
}

func (x Errcode) Enum() *Errcode {
	p := new(Errcode)
	*p = x
	return p
}
func (x Errcode) String() string {
	return proto.EnumName(Errcode_name, int32(x))
}
func (x *Errcode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Errcode_value, data, "Errcode")
	if err != nil {
		return err
	}
	*x = Errcode(value)
	return nil
}

type RelayReq struct {
	Data             *string `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RelayReq) Reset()         { *m = RelayReq{} }
func (m *RelayReq) String() string { return proto.CompactTextString(m) }
func (*RelayReq) ProtoMessage()    {}

func (m *RelayReq) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

// CMD_LOGIN_REQ
type LoginReq struct {
	Account          *string `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Token            []byte  `protobuf:"bytes,3,req,name=token" json:"token,omitempty"`
	Roleid           *uint64 `protobuf:"varint,4,req,name=roleid" json:"roleid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}

func (m *LoginReq) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *LoginReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LoginReq) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *LoginReq) GetRoleid() uint64 {
	if m != nil && m.Roleid != nil {
		return *m.Roleid
	}
	return 0
}

// CMD_LOGIN_RSP
type LoginRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LoginRsp) Reset()         { *m = LoginRsp{} }
func (m *LoginRsp) String() string { return proto.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()    {}

// CMD_LOGOUT_REQ
type LogoutReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogoutReq) Reset()         { *m = LogoutReq{} }
func (m *LogoutReq) String() string { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()    {}

// CMD_LOGOUT_RSP
type LogoutRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogoutRsp) Reset()         { *m = LogoutRsp{} }
func (m *LogoutRsp) String() string { return proto.CompactTextString(m) }
func (*LogoutRsp) ProtoMessage()    {}

// CMD_KICKOUT_REQ
type KickoutReq struct {
	Roleid           *uint64 `protobuf:"varint,1,req,name=roleid" json:"roleid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *KickoutReq) Reset()         { *m = KickoutReq{} }
func (m *KickoutReq) String() string { return proto.CompactTextString(m) }
func (*KickoutReq) ProtoMessage()    {}

func (m *KickoutReq) GetRoleid() uint64 {
	if m != nil && m.Roleid != nil {
		return *m.Roleid
	}
	return 0
}

// CMD_KICKOUT_RSP
type KickoutRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *KickoutRsp) Reset()         { *m = KickoutRsp{} }
func (m *KickoutRsp) String() string { return proto.CompactTextString(m) }
func (*KickoutRsp) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("gsproto.Command", Command_name, Command_value)
	proto.RegisterEnum("gsproto.Errcode", Errcode_name, Errcode_value)
}
